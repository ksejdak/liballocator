language: cpp
sudo: required
group: travis_latest

git:
  depth: false

matrix:
  include:
    - os: linux
      env: COMPILER=gcc COMPILER_VER=8 CMAKE_VER=3.12.0 CODECOV=false
    - os: linux
      env: COMPILER=clang COMPILER_VER=6.0.1 CMAKE_VER=3.12.0 CODECOV=false
    #- os: osx
    #  osx_image: xcode10
    #  env: COMPILER=gcc COMPILER_VER=8 CMAKE_VER=3.12.0 CODECOV=false
    - os: osx
      osx_image: xcode10
      env: COMPILER=clang COMPILER_VER=6.0.1 CMAKE_VER=3.12.0 CODECOV=true

before_install:
  # Add CI scripts to PATH.
  - export PATH=${TRAVIS_BUILD_DIR}/tools/ci:${PATH}

  # Create path for dependencies.
  - mkdir -p deps
  - cd deps

install:
  - install-${COMPILER}.sh ${COMPILER_VER} ${TRAVIS_OS_NAME}
  - install-cmake.sh ${CMAKE_VER} ${TRAVIS_OS_NAME}
  - install-clang.sh 6.0.1 ${TRAVIS_OS_NAME} false
  - intall-doxygen.sh ${TRAVIS_OS_NAME}
  - if [[ ${CODECOV} == true ]]; then
      install-lcov.sh ${TRAVIS_OS_NAME}
    fi

before_script:
  - export-paths.sh
  - source ${HOME}/.bash_profile

  # Check versions of used tools.
  - cmake --version
  - clang-format --version

  - cd ${TRAVIS_BUILD_DIR}

script:
  # Build.
  - mkdir -p build
  - cd build
  - cmake -DLIBALLOCATOR_TESTS=ON -DLIBALLOCATOR_DOCS=ON -DLIBALLOCATOR_COVERAGE=${CODECOV} ..
  - make
  - make doxygen

  # Run tests.
  - ctest -R UnitTests
  - cd -

  # Run code coverage.
  - |
    cd build
    if [[ ${CODECOV} == true ]]; then
      make coverage
      bash <(curl -s https://codecov.io/bash)
    fi
    cd -

after_script:
  # Check code format using clang-format.
  - check-format.sh .

  # Check doxygen documentation.
  - check-doxygen.sh docs/doxygen.warn build/docs/doxygen.warn
